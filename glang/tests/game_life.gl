main_field[640000]
tmp_field[640000]

function field_init() {
  x = 0
  WIDTH = 800
  HEIGHT = 800
  while (x < WIDTH * HEIGHT) {
    main_field[x] = get_random_val()
    x = x + 1
  }
  return 0
}

function get_cell(x, y) {
  WIDTH = 800
  HEIGHT = 800
  res_x = (x + WIDTH) % WIDTH
  res_y = (y + HEIGHT) % HEIGHT
  
  return main_field[res_y * WIDTH + res_x]
}

function get_neighbours_num(x, y) {
  num = 0 
  x_minus_1 = x - 1
  x_plus_1 = x + 1
  y_minus_1 = y - 1
  y_plus_1 = y + 1

  num = get_cell(x_minus_1, y_minus_1) + get_cell(x, y_minus_1) + get_cell(x_plus_1, y_minus_1) +
        get_cell(x_plus_1, y) + get_cell(x_plus_1, y_plus_1) + get_cell(x, y_plus_1) +
        get_cell(x_minus_1, y_plus_1) + get_cell(x_minus_1, y) 

  return num 
}

function make_next_gen() {
  x = 0
  y = 0
  WIDTH = 800
  HEIGHT = 800

  DEAD = 0
  ALIVE = 1
  NONE = 2

  while (y < HEIGHT) {
    while (x < WIDTH) {

      state = NONE 
      neighbrs_num = get_neighbours_num(x, y) 
      cur_cell = get_cell(x, y) 

      if (cur_cell == 1) {

        if (neighbrs_num == 2 || neighbrs_num == 3) {
          state = ALIVE 
        }

        if (neighbrs_num != 2 || neighbrs_num != 3) {
          state = DEAD 
        }
      }
      if (cur_cell == 0) {

        if (neighbrs_num == 3) {
          state = ALIVE 
        }

        if (neighbrs_num != 3) {
          state = DEAD 
        }
      }

      tmp_field[y * WIDTH + x] = state 
      x = x + 1
    }
    y = y + 1
  }

  return 0 
}

function draw_field() {
  x = 0
  y = 0
  zero = 0
  green = 255
  WIDTH = 800
  HEIGHT = 800

  while (x < WIDTH) {
    while (y < HEIGHT) {
      cur_cell = get_cell(x, y) 

      if (cur_cell == 1) {
        set_pixel(x, y, zero, green, zero) 
      }
      if (cur_cell == 0) {
        set_pixel(x, y, zero, zero, zero) 
      }
      y = y + 1
    }
    x = x + 1
  }
  return 0
}

function swap() {
  x = 0
  WIDTH = 800
  HEIGHT = 800

  while (x < WIDTH * HEIGHT) {
    main_field[x] = tmp_field[x] 
    x = x + 1
  }
  return 0
}

function main() {
  true = 1
  graph_init()
  field_init()
  zero = 0

  while (true == 1) {
    window_clear(zero, zero, zero)
    make_next_gen() 
    draw_field() 
    swap() 
    flush()
  }

  return 0
}